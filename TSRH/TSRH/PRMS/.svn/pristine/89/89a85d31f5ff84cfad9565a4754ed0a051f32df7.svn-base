/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.uta.tsrh.specialnotes.controllers;

import edu.uta.tsrh.specialnotes.misc.DBMgrProxy;
import edu.uta.tsrh.specialnotes.misc.PatientRecord;
import java.sql.Date;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author David
 */
public class RecordController {

    public static PatientRecord getPatientRecord(String fpatientId, String fpatientName, String fDOB) {
        PatientRecord record = null;
        String patientID = "";
        if (fpatientId != null) {
            if (!fpatientId.isEmpty()) {
                patientID = fpatientId;
            }
        } else {
            patientID = "";
        }

        String patientFirstName = "";
        String patientLastName = "";
        String[] names = null;
        if (fpatientName != null) {
            if (!fpatientName.isEmpty()) {
                if (fpatientName.contains(",")) {
                    names = fpatientName.split(",");
                } else if (fpatientName.contains(" ")) {
                    names = fpatientName.split(",");
                } else {
                    names = new String[2];
                    names[0] = "";
                    names[1] = fpatientName;
                }
            }
        } else {
            names = new String[2];
            names[0] = "";
            names[1] = "";
        }
        if (names != null) {
                patientLastName = names[0];
                patientFirstName = names[1];
        }

        Date patientDateOfBirth = null;
        if (fDOB != null) {
            if (!fDOB.isEmpty()) {
                DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                try {
                    patientDateOfBirth = new Date(dateFormat.parse(fDOB).getTime());
                } catch (ParseException ex) {
                    Logger.getLogger(RecordController.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                patientDateOfBirth = null;
            }
        }
        record = DBMgrProxy.getInstance().getPatientRecord(patientID, patientFirstName, patientLastName, patientDateOfBirth);

        if (record == null) {
            record = new PatientRecord();
        }
        return record;
    }
}
