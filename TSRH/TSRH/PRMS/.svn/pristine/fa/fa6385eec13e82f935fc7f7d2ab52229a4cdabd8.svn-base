
package edu.uta.tsrh.db.commandpattern;

import com.mysql.jdbc.Connection;
import edu.uta.tsrh.db.DAO;
import edu.uta.tsrh.db.DBQueryExecuter;
import edu.uta.tsrh.db.QueryBuilder.SelectSQLBuilder;
import edu.uta.tsrh.db.mapper.pidMap;
import edu.uta.tsrh.db.mapper.Mapper;
import edu.uta.tsrh.model.QueryCondition;
import java.sql.ResultSet;


public class RetrievePID implements MySQLCmd {
    
    private String fName;    
    private String lName;
    private String dob;

    public RetrievePID(String fn, String ln, String bd)
    {
        this.fName = fn;
        this.lName = ln;
        this.dob = bd;
        
    }

    @Override
    public String execute()
    {
            String sqlQuery = buildQuery();
            Connection connection = DAO.getConnection();
            
            //get patient ID from the DB w/ the given info
            DBQueryExecuter queryExecuter = new DBQueryExecuter();
            ResultSet resultSet = queryExecuter.read(sqlQuery, connection);
            
            Mapper mapper = new pidMap();
            String pid = mapper.map(resultSet).toString();  
            
            DAO.closeConnection();            
            return pid;
    }

    private String buildQuery()
    {
            SelectSQLBuilder selectSQLBuilder = new SelectSQLBuilder();
            
            selectSQLBuilder.addSelectColumn("id");
            selectSQLBuilder.addFromTableName("patient");
            
            selectSQLBuilder.addWhereCondition(new QueryCondition("first_name", "=", this.fName));
            selectSQLBuilder.addWhereCondition(new QueryCondition("last_name", "=", this.lName));
            selectSQLBuilder.addWhereCondition(new QueryCondition("dob", "=", this.dob));
            
            selectSQLBuilder.construct();
            String sql = selectSQLBuilder.getSQLString();  
            
            return sql;
            
            
    }

    @Override
    public boolean isReversible()
    {
        return false;
    }

    @Override
    public void undo()
    {

    }
}
